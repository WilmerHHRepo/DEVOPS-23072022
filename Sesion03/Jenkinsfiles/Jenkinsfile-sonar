pipeline {

    agent none

    stages {
        stage('Build') {
            agent {
                docker { image 'maven:3.6.3-openjdk-11-slim' }
            }
            steps {

                git credentialsId: 'github',
                    url: 'https://github.com/aldo2510/galaxy-jenkins-lab-maven.git',
                    branch: 'main'

                sh 'mvn package'
            }

            post{
                success {
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true, onlyIfSuccessful: true
                    nexusArtifactUploader artifacts: [[artifactId: 'labmaven', classifier: '', 
                                                                    file: 'target/*.jar', type: 'jar']], credentialsId: 'admin', 
                                                                    groupId: 'cloud.csonic', nexusUrl: 'http://34.125.43.36:8081', 
                                                                    nexusVersion: 'nexus3', protocol: 'http', 
                                                                    repository: 'http://34.125.43.36:8081/repository/claro-releases/', version: '1.0.0'
                }
            }
        }
        stage('SonarQube analysis') {
            agent {
                docker { image 'maven:3.6.3-openjdk-11-slim' }
            }
            steps {

                git credentialsId: 'github',
                    url: 'https://github.com/aldo2510/galaxy-jenkins-lab-maven.git',
                    branch: 'main'
                script{
                    def scannerHome = tool 'scanner-default';;
                    withSonarQubeEnv('sonar-server') {
                        sh "${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=labmaven01 \
                            -Dsonar.projectName=labmaven01 \
                            -Dsonar.sources=src/main \
                            -Dsonar.sourceEncoding=UTF-8 \
                            -Dsonar.language=java \
                            -Dsonar.tests=src/test \
                            -Dsonar.junit.reportsPath=target/surefire-reports \
                            -Dsonar.surefire.reportsPath=target/surefire-reports \
                            -Dsonar.jacoco.reportPath=target/jacoco.exec \
                            -Dsonar.java.binaries=target/classes \
                            -Dsonar.java.coveragePlugin=jacoco \
                            -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco.xml \
                            -Dsonar.exclusions=**/*IT.java,**/*TEST.java,**/*Test.java,**/src/it**,**/src/test**,**/gradle/wrapper** \
                            -Dsonar.java.libraries=target/*.jar"
                        }
                    }
                }
            }
        }
    }
